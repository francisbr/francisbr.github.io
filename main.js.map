{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/add-client/add-client.component.css","webpack:///./src/app/components/add-client/add-client.component.html","webpack:///./src/app/components/add-client/add-client.component.ts","webpack:///./src/app/components/client-details/client-details.component.css","webpack:///./src/app/components/client-details/client-details.component.html","webpack:///./src/app/components/client-details/client-details.component.ts","webpack:///./src/app/components/clients/clients.component.css","webpack:///./src/app/components/clients/clients.component.html","webpack:///./src/app/components/clients/clients.component.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/edit-client/edit-client.component.css","webpack:///./src/app/components/edit-client/edit-client.component.html","webpack:///./src/app/components/edit-client/edit-client.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/not-found/not-found.component.css","webpack:///./src/app/components/not-found/not-found.component.html","webpack:///./src/app/components/not-found/not-found.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/settings/settings.component.css","webpack:///./src/app/components/settings/settings.component.html","webpack:///./src/app/components/settings/settings.component.ts","webpack:///./src/app/components/sidebar/sidebar.component.css","webpack:///./src/app/components/sidebar/sidebar.component.html","webpack:///./src/app/components/sidebar/sidebar.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/guards/register.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/client.service.ts","webpack:///./src/app/services/settings.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {DashboardComponent} from './components/dashboard/dashboard.component';\nimport {LoginComponent} from './components/login/login.component';\nimport {RegisterComponent} from './components/register/register.component';\nimport {AddClientComponent} from './components/add-client/add-client.component';\nimport {EditClientComponent} from './components/edit-client/edit-client.component';\nimport {SettingsComponent} from './components/settings/settings.component';\nimport {NotFoundComponent} from './components/not-found/not-found.component';\nimport {ClientDetailsComponent} from './components/client-details/client-details.component';\nimport {AuthGuard} from './guards/auth.guard';\nimport {RegisterGuard} from './guards/register.guard';\n\nconst routes: Routes = [\n    {path: '', component: DashboardComponent, canActivate: [AuthGuard]},\n    {path: 'login', component: LoginComponent},\n    {path: 'register', component: RegisterComponent, canActivate: [RegisterGuard]},\n    {path: 'client/add', component: AddClientComponent, canActivate: [AuthGuard]},\n    {path: 'client/edit/:id', component: EditClientComponent, canActivate: [AuthGuard]},\n    {path: 'client/:id', component: ClientDetailsComponent, canActivate: [AuthGuard]},\n    {path: 'settings', component: SettingsComponent, canActivate: [AuthGuard]},\n    {path: '**', component: NotFoundComponent}\n];\n\n@NgModule({\n    exports: [RouterModule],\n    imports: [\n        RouterModule.forRoot(routes)\n    ],\n    providers: [\n        AuthGuard,\n        RegisterGuard\n    ]\n})\nexport class AppRoutingModule {\n}\n","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<div class=\\\"container\\\">\\n\\t<flash-messages></flash-messages>\\n\\t<router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport {environment} from '../environments/environment';\nimport {AngularFireModule} from 'angularfire2';\nimport {AngularFirestoreModule} from 'angularfire2/firestore';\nimport {AngularFireAuthModule} from 'angularfire2/auth';\n\nimport {AppComponent} from './app.component';\nimport {NavbarComponent} from './components/navbar/navbar.component';\nimport {DashboardComponent} from './components/dashboard/dashboard.component';\nimport {ClientsComponent} from './components/clients/clients.component';\nimport {SidebarComponent} from './components/sidebar/sidebar.component';\nimport {AddClientComponent} from './components/add-client/add-client.component';\nimport {EditClientComponent} from './components/edit-client/edit-client.component';\nimport {ClientDetailsComponent} from './components/client-details/client-details.component';\nimport {LoginComponent} from './components/login/login.component';\nimport {RegisterComponent} from './components/register/register.component';\nimport {SettingsComponent} from './components/settings/settings.component';\nimport {NotFoundComponent} from './components/not-found/not-found.component';\nimport {AppRoutingModule} from './/app-routing.module';\nimport {FlashMessagesModule} from 'angular2-flash-messages';\nimport {AuthService} from './services/auth.service';\nimport {ClientService} from './services/client.service';\nimport {SettingsService} from './services/settings.service';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        NavbarComponent,\n        DashboardComponent,\n        ClientsComponent,\n        SidebarComponent,\n        AddClientComponent,\n        EditClientComponent,\n        ClientDetailsComponent,\n        LoginComponent,\n        RegisterComponent,\n        SettingsComponent,\n        NotFoundComponent\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        AngularFireModule.initializeApp(environment.firebase),\n        AngularFirestoreModule,\n        AngularFireAuthModule,\n        FormsModule,\n        FlashMessagesModule.forRoot()\n    ],\n    providers: [\n        ClientService,\n        AuthService,\n        SettingsService\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n\\t<div class=\\\"col-md-6\\\">\\n\\t\\t<a routerLink=\\\"/\\\" class=\\\"btn btn-link\\\">\\n\\t\\t\\t<i class=\\\"fas fa-arrow-circle-left\\\"></i> Back To Dashboard\\n\\t\\t</a>\\n\\t</div>\\n\\t<div class=\\\"col-md-6\\\">\\n\\n\\t</div>\\n</div>\\n\\n<div class=\\\"card\\\">\\n\\t<div class=\\\"card-header\\\">\\n\\t\\tAdd Client\\n\\t</div>\\n\\t<div class=\\\"card-body\\\">\\n\\t\\t<form #clientForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(clientForm)\\\">\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<label for=\\\"firstName\\\">First Name</label>\\n\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\ttype=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\tname=\\\"firstName\\\"\\n\\t\\t\\t\\t\\t\\t#clientFirstName=\\\"ngModel\\\"\\n\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{'is-invalid': clientFirstName.errors && clientFirstName.touched}\\\"\\n\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"client.firstName\\\"\\n\\t\\t\\t\\t\\t\\tminlength=\\\"2\\\"\\n\\t\\t\\t\\t\\t\\trequired\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t<div [hidden]=\\\"!clientFirstName.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n\\t\\t\\t\\t\\tFirst name required\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div [hidden]=\\\"!clientFirstName.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n\\t\\t\\t\\t\\tMust be at least 2 characters\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<label for=\\\"lastName\\\">Last Name</label>\\n\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\ttype=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\tname=\\\"lastName\\\"\\n\\t\\t\\t\\t\\t\\t#clientLastName=\\\"ngModel\\\"\\n\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{'is-invalid': clientLastName.errors && clientLastName.touched}\\\"\\n\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"client.lastName\\\"\\n\\t\\t\\t\\t\\t\\tminlength=\\\"2\\\"\\n\\t\\t\\t\\t\\t\\trequired\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t<div [hidden]=\\\"!clientLastName.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n\\t\\t\\t\\t\\tLast name required\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div [hidden]=\\\"!clientLastName.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n\\t\\t\\t\\t\\tMust be at least 2 characters\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<label for=\\\"email\\\">Email</label>\\n\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\ttype=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\tname=\\\"email\\\"\\n\\t\\t\\t\\t\\t\\t#clientEmail=\\\"ngModel\\\"\\n\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{'is-invalid': clientEmail.errors && clientEmail.touched}\\\"\\n\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"client.email\\\"\\n\\t\\t\\t\\t\\t\\tpattern=\\\"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\\\"\\n\\t\\t\\t\\t\\t\\trequired\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t<div [hidden]=\\\"!clientEmail.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n\\t\\t\\t\\t\\tEmail required\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div [hidden]=\\\"!clientEmail.errors?.pattern\\\" class=\\\"invalid-feedback\\\">\\n\\t\\t\\t\\t\\tEmail is not valid\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<label for=\\\"phone\\\">Phone</label>\\n\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\ttype=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\tname=\\\"phone\\\"\\n\\t\\t\\t\\t\\t\\t#clientPhone=\\\"ngModel\\\"\\n\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{'is-invalid': clientPhone.errors && clientPhone.touched}\\\"\\n\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"client.phone\\\"\\n\\t\\t\\t\\t\\t\\tminlength=\\\"10\\\"\\n\\t\\t\\t\\t\\t\\trequired\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t<div [hidden]=\\\"!clientPhone.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n\\t\\t\\t\\t\\tPhone required\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div [hidden]=\\\"!clientPhone.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n\\t\\t\\t\\t\\tMust be at least 10 characters\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<label for=\\\"balance\\\">Balance</label>\\n\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\ttype=\\\"number\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\tname=\\\"balance\\\"\\n\\t\\t\\t\\t\\t\\t#clientPhone=\\\"ngModel\\\"\\n\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"client.balance\\\"\\n\\t\\t\\t\\t\\t\\t[disabled]=\\\"disableBalanceOnAdd\\\"\\n\\t\\t\\t\\t>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<input type=\\\"submit\\\" value=\\\"Submit\\\" class=\\\"btn btn-primary btn-block\\\">\\n\\n\\t\\t</form>\\n\\t</div>\\n</div>\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Client} from '../../models/Client';\nimport {FlashMessagesService} from 'angular2-flash-messages';\nimport {ClientService} from '../../services/client.service';\nimport {Router} from '@angular/router';\nimport {SettingsService} from '../../services/settings.service';\n\n@Component({\n    selector: 'app-add-client',\n    templateUrl: './add-client.component.html',\n    styleUrls: ['./add-client.component.css']\n})\nexport class AddClientComponent implements OnInit {\n\n    client: Client =  {\n        firstName: '',\n        lastName: '',\n        email: '',\n        phone: '',\n        balance: 0,\n    };\n\n    disableBalanceOnAdd = this.settingService.getSettings().disableBalanceOnAdd;\n    @ViewChild('clientForm') form: any;\n\n    constructor(\n        private flashMessage: FlashMessagesService,\n        private clientService: ClientService,\n        private router: Router,\n        private settingService: SettingsService\n    ) {\n    }\n\n    ngOnInit() {\n    }\n\n    onSubmit({value, valid}: {value: Client, valid: boolean}) {\n\n        if (this.disableBalanceOnAdd) {\n            value.balance = 0;\n        }\n\n        if (!valid) {\n            // show error\n            this.flashMessage.show(\"Please fill out the form correclty\", {\n                cssClass: 'alert-danger',\n            });\n        } else {\n\n            this.clientService.newClient(value);\n\n            // show message\n            this.flashMessage.show(\"New client added\", {\n                cssClass: 'alert-success',\n                timeout: 400000\n            });\n\n            this.router.navigate(['/']);\n        }\n\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n\\t<div class=\\\"col-md-6\\\">\\n\\t\\t<a routerLink=\\\"/\\\" class=\\\"btn btn-link\\\">\\n\\t\\t\\t<i class=\\\"fas fa-arrow-circle-left\\\"></i> Back to dashboard\\n\\t\\t</a>\\n\\t</div>\\n\\t<div class=\\\"col-md-6\\\">\\n\\n\\t\\t<div class=\\\"btn-group float-right\\\">\\n\\t\\t\\t<a routerLink=\\\"/client/edit/{{id}}\\\" class=\\\"btn btn-dark\\\">Edit</a>\\n\\n\\t\\t\\t<button (click)=\\\"onDeleteClick()\\\" class=\\\"btn btn-danger\\\">Delete</button>\\n\\t\\t</div>\\n\\n\\t</div>\\n</div>\\n\\n<hr>\\n\\n<div *ngIf=\\\"client\\\" class=\\\"card\\\">\\n\\t<h3 class=\\\"card-header\\\">{{client.firstName}} {{client.lastName}}</h3>\\n\\n\\t<div class=\\\"card-body\\\">\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t<div class=\\\"col-md-8 col-sm-6\\\">\\n\\t\\t\\t\\t<h4>Client ID: {{client.id}}</h4>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"col-md-4 col-sm-6\\\">\\n\\t\\t\\t\\t<h3 class=\\\"float-right\\\">\\n\\t\\t\\t\\t\\tBalance\\n\\t\\t\\t\\t\\t<span\\n\\t\\t\\t\\t\\t\\t\\t[class.text-danger]=\\\"client.balance > 0\\\"\\n\\t\\t\\t\\t\\t\\t\\t[class.text-success]=\\\"client.balance <= 0\\\"\\n\\t\\t\\t\\t\\t>{{client.balance | currency:\\\"USD\\\":\\\"symbol\\\"}}</span>\\n\\t\\t\\t\\t\\t<small class=\\\"ml-1\\\">\\n\\t\\t\\t\\t\\t\\t<a (click)=\\\"showBalanceUpdateInput = !showBalanceUpdateInput\\\">\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-pencil-alt\\\"></i>\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t</small>\\n\\t\\t\\t\\t</h3>\\n\\n\\t\\t\\t\\t<div class=\\\"clearfix\\\">\\n\\t\\t\\t\\t\\t<form *ngIf=\\\"showBalanceUpdateInput\\\" (submit)=\\\"updateBalance()\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"balance\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"client.balance\\\">\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"input-group-btn\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Update</button>\\n\\t\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t\\t<hr>\\n\\n\\t\\t<ul class=\\\"list-group\\\">\\n\\t\\t\\t<li class=\\\"list-group-item\\\">\\n\\t\\t\\t\\tContact Email: {{client.email}}\\n\\t\\t\\t</li>\\n\\t\\t\\t<li class=\\\"list-group-item\\\">\\n\\t\\t\\t\\tContact Phone: {{client.phone}}\\n\\t\\t\\t</li>\\n\\t\\t</ul>\\n\\n\\t</div>\\n\\n\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ClientService} from '../../services/client.service';\nimport {Client} from '../../models/Client';\nimport {Router, ActivatedRoute, Params} from '@angular/router';\nimport {FlashMessagesService} from 'angular2-flash-messages';\n\n@Component({\n    selector: 'app-client-details',\n    templateUrl: './client-details.component.html',\n    styleUrls: ['./client-details.component.css']\n})\nexport class ClientDetailsComponent implements OnInit {\n\n    id: string;\n    client: Client;\n    hasBalance = false;\n    showBalanceUpdateInput = false;\n\n    constructor(\n        private clientService: ClientService,\n        private router: Router,\n        private route: ActivatedRoute,\n        private flashMessages: FlashMessagesService\n    ) {\n    }\n\n    ngOnInit() {\n        this.id = this.route.snapshot.params['id'];\n\n        this.clientService.getClient(this.id).subscribe(client => {\n            if (client != null) {\n                if (client.balance > 0) {\n                    this.hasBalance = true;\n                }\n            }\n            this.client = client;\n        });\n    }\n\n    updateBalance() {\n\n        this.clientService.updateClient(this.client);\n\n        this.flashMessages.show(\"Balance updated\", {\n            cssClass: \"alert-success\"\n        });\n\n    }\n\n    onDeleteClick() {\n        if (confirm('Are you sure?')) {\n            this.clientService.deleteClient(this.client);\n\n            this.flashMessages.show(\"Client removed\", {\n                cssClass: 'alert-success'\n            });\n\n            this.router.navigate(['/']);\n        }\n    }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n\\t<div class=\\\"col-md-6\\\">\\n\\t\\t<h2><i class=\\\"fas fa-users\\\"></i> Clients</h2>\\n\\t</div>\\n\\t<div class=\\\"col-md-6\\\">\\n\\t\\t<h5 class=\\\"text-right text-secondary\\\">Total Owed: {{totalOwed | currency:\\\"USD\\\":\\\"symbol\\\"}}</h5>\\n\\t</div>\\n</div>\\n\\n<table *ngIf=\\\"clients?.length > 0; else noClients\\\" class=\\\"table table-striped\\\">\\n\\t<thead class=\\\"thead-inverse\\\">\\n\\t<tr>\\n\\t\\t<th>Name</th>\\n\\t\\t<th>Email</th>\\n\\t\\t<th>Balance</th>\\n\\t\\t<th></th>\\n\\t</tr>\\n\\t</thead>\\n\\t<tbody>\\n\\t<tr *ngFor=\\\"let client of clients\\\">\\n\\t\\t<td>{{client.firstName}} {{client.lastName}}</td>\\n\\t\\t<td>{{client.email}}</td>\\n\\t\\t<td>{{client.balance | currency}}</td>\\n\\t\\t<td><a routerLink=\\\"client/{{client.id}}\\\" class=\\\"btn btn-secondary btn-sm\\\"><i class=\\\"fas fa-arrow-circle-right\\\"></i> Details</a></td>\\n\\t</tr>\\n\\t</tbody>\\n</table>\\n\\n<ng-template #noClients>\\n\\t<hr>\\n\\t<h5>There are no clients in the system</h5>\\n</ng-template>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ClientService} from '../../services/client.service';\nimport {Client} from '../../models/Client';\n\n@Component({\n    selector: 'app-clients',\n    templateUrl: './clients.component.html',\n    styleUrls: ['./clients.component.css']\n})\nexport class ClientsComponent implements OnInit {\n\n    clients: Client[];\n    totalOwed: number;\n\n    constructor(\n        private clientService: ClientService\n    ) {\n    }\n\n    ngOnInit() {\n        this.clientService.getClients().subscribe(clients => {\n            this.clients = clients;\n            this.getTotalOwed();\n        });\n    }\n\n    getTotalOwed() {\n        this.totalOwed = this.clients.reduce((totalR, client) => {\n            return totalR + parseFloat(client.balance.toString());\n        }, 0);\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n\\t<div class=\\\"col-md-10\\\">\\n\\t\\t<app-clients></app-clients>\\n\\t</div>\\n\\n\\t<div class=\\\"col-md-2\\\">\\n\\t\\t<app-sidebar></app-sidebar>\\n\\t</div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n\\t<div class=\\\"col-md-6\\\">\\n\\t\\t<a routerLink=\\\"/client/{{id}}\\\" class=\\\"btn btn-link\\\">\\n\\t\\t\\t<i class=\\\"fas fa-arrow-circle-left\\\"></i> Back To Client\\n\\t\\t</a>\\n\\t</div>\\n\\t<div class=\\\"col-md-6\\\">\\n\\n\\t</div>\\n</div>\\n\\n<div class=\\\"card\\\">\\n\\t<div class=\\\"card-header\\\">\\n\\t\\tEdit Client\\n\\t</div>\\n\\t<div class=\\\"card-body\\\">\\n\\t\\t<form #clientForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(clientForm)\\\">\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<label for=\\\"firstName\\\">First Name</label>\\n\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\ttype=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\tname=\\\"firstName\\\"\\n\\t\\t\\t\\t\\t\\t#clientFirstName=\\\"ngModel\\\"\\n\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{'is-invalid': clientFirstName.errors && clientFirstName.touched}\\\"\\n\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"client.firstName\\\"\\n\\t\\t\\t\\t\\t\\tminlength=\\\"2\\\"\\n\\t\\t\\t\\t\\t\\trequired\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t<div [hidden]=\\\"!clientFirstName.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n\\t\\t\\t\\t\\tFirst name required\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div [hidden]=\\\"!clientFirstName.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n\\t\\t\\t\\t\\tMust be at least 2 characters\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<label for=\\\"lastName\\\">Last Name</label>\\n\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\ttype=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\tname=\\\"lastName\\\"\\n\\t\\t\\t\\t\\t\\t#clientLastName=\\\"ngModel\\\"\\n\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{'is-invalid': clientLastName.errors && clientLastName.touched}\\\"\\n\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"client.lastName\\\"\\n\\t\\t\\t\\t\\t\\tminlength=\\\"2\\\"\\n\\t\\t\\t\\t\\t\\trequired\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t<div [hidden]=\\\"!clientLastName.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n\\t\\t\\t\\t\\tLast name required\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div [hidden]=\\\"!clientLastName.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n\\t\\t\\t\\t\\tMust be at least 2 characters\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<label for=\\\"email\\\">Email</label>\\n\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\ttype=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\tname=\\\"email\\\"\\n\\t\\t\\t\\t\\t\\t#clientEmail=\\\"ngModel\\\"\\n\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{'is-invalid': clientEmail.errors && clientEmail.touched}\\\"\\n\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"client.email\\\"\\n\\t\\t\\t\\t\\t\\tpattern=\\\"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\\\"\\n\\t\\t\\t\\t\\t\\trequired\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t<div [hidden]=\\\"!clientEmail.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n\\t\\t\\t\\t\\tEmail required\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div [hidden]=\\\"!clientEmail.errors?.pattern\\\" class=\\\"invalid-feedback\\\">\\n\\t\\t\\t\\t\\tEmail is not valid\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<label for=\\\"phone\\\">Phone</label>\\n\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\ttype=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\tname=\\\"phone\\\"\\n\\t\\t\\t\\t\\t\\t#clientPhone=\\\"ngModel\\\"\\n\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{'is-invalid': clientPhone.errors && clientPhone.touched}\\\"\\n\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"client.phone\\\"\\n\\t\\t\\t\\t\\t\\tminlength=\\\"10\\\"\\n\\t\\t\\t\\t\\t\\trequired\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t<div [hidden]=\\\"!clientPhone.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n\\t\\t\\t\\t\\tPhone required\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div [hidden]=\\\"!clientPhone.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n\\t\\t\\t\\t\\tMust be at least 10 characters\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<label for=\\\"balance\\\">Balance</label>\\n\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\ttype=\\\"number\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\tname=\\\"balance\\\"\\n\\t\\t\\t\\t\\t\\t#clientPhone=\\\"ngModel\\\"\\n\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"client.balance\\\"\\n\\t\\t\\t\\t\\t\\t[disabled]=\\\"disableBalanceOnEdit\\\"\\n\\t\\t\\t\\t>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<input type=\\\"submit\\\" value=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\">\\n\\n\\t\\t</form>\\n\\t</div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ClientService} from '../../services/client.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {FlashMessagesService} from 'angular2-flash-messages';\nimport {Client} from '../../models/Client';\nimport {SettingsService} from '../../services/settings.service';\n\n@Component({\n    selector: 'app-edit-client',\n    templateUrl: './edit-client.component.html',\n    styleUrls: ['./edit-client.component.css']\n})\nexport class EditClientComponent implements OnInit {\n\n    id: string;\n    client: Client = {\n        firstName: '',\n        lastName: '',\n        email: '',\n        phone: '',\n        balance: 0,\n    };\n\n    disableBalanceOnEdit = this.settingService.getSettings().disableBalanceOnEdit;\n\n    constructor(\n        private clientService: ClientService,\n        private router: Router,\n        private route: ActivatedRoute,\n        private flashMessages: FlashMessagesService,\n        private settingService: SettingsService\n    ) {\n    }\n\n    ngOnInit() {\n        this.id = this.route.snapshot.params['id'];\n\n        this.clientService.getClient(this.id).subscribe(client => this.client = client);\n    }\n\n    onSubmit({value, valid}: { value: Client, valid: boolean }) {\n        if (!valid) {\n            this.flashMessages.show(\"Please fill out the form correctly\", {\n                cssClass: 'alert-danger'\n            });\n        } else {\n            // Add id to client\n            value.id = this.id;\n            this.clientService.updateClient(value);\n            this.flashMessages.show(\"Client updated\", {\n                cssClass: 'alert-success'\n            });\n\n            this.router.navigate([\"/\"]);\n        }\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n\\t<div class=\\\"col-md-6 mx-auto\\\">\\n\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t<div class=\\\"card-body\\\">\\n\\n\\t\\t\\t\\t<h1 class=\\\"text-center pb-4 pt-3\\\">\\n\\t\\t\\t\\t\\t<span class=\\\"text-primary\\\"><i class=\\\"fas fa-lock\\\"></i> Client Panel</span> Login\\n\\t\\t\\t\\t</h1>\\n\\n\\t\\t\\t\\t<form (submit)=\\\"onSubmit()\\\">\\n\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label for=\\\"email\\\">Email</label>\\n\\t\\t\\t\\t\\t\\t<input type=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" required>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label for=\\\"password\\\">Password</label>\\n\\t\\t\\t\\t\\t\\t<input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" required>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<input type=\\\"submit\\\" value=\\\"Login\\\" class=\\\"btn btn-primary btn-block\\\">\\n\\n\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {FlashMessagesService} from 'angular2-flash-messages';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n    email: string;\n    password: string;\n\n  constructor(\n      private authService: AuthService,\n      private router: Router,\n      private flashMessages: FlashMessagesService,\n  ) { }\n\n  ngOnInit() {\n      this.authService.getAuth().subscribe(auth => {\n          if (auth) {\n              this.router.navigate(['/']);\n          }\n      });\n  }\n\n  onSubmit() {\n      this.authService.login(this.email, this.password).then(res => {\n          this.flashMessages.show(\"You are now logged in\", {\n              cssClass: 'alert-success'\n          });\n          this.router.navigate(['/']);\n      }).catch(err => {\n          this.flashMessages.show(err.message, {\n              cssClass: 'alert-danger'\n          });\n      });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-primary mb-4\\\">\\n\\t<div class=\\\"container\\\">\\n\\n\\t\\t<a routerLink=\\\"/\\\" class=\\\"navbar-brand\\\">ClientPanel</a>\\n\\n\\t\\t<button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarMain\\\">\\n\\t\\t\\t<span class=\\\"navbar-toggler-icon\\\"></span>\\n\\t\\t</button>\\n\\n\\t\\t<div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarMain\\\">\\n\\n\\t\\t\\t<ul class=\\\"navbar-nav mr-auto\\\">\\n\\t\\t\\t\\t<li *ngIf=\\\"isLoggedIn\\\" class=\\\"nav-item\\\">\\n\\t\\t\\t\\t\\t<a routerLink=\\\"/\\\" class=\\\"nav-link\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">Dashboard</a>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t</ul>\\n\\n\\t\\t\\t<ul class=\\\"navbar-nav ml-auto\\\">\\n\\t\\t\\t\\t<li *ngIf=\\\"!isLoggedIn && showRegister\\\" class=\\\"nav-item\\\">\\n\\t\\t\\t\\t\\t<a routerLink=\\\"/register\\\" class=\\\"nav-link\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">Register</a>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t<li *ngIf=\\\"!isLoggedIn && showRegister\\\" class=\\\"nav-item\\\">\\n\\t\\t\\t\\t\\t<a routerLink=\\\"/login\\\" class=\\\"nav-link\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">Login</a>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t<li *ngIf=\\\"isLoggedIn\\\" class=\\\"navbar-text\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"\\\">{{loggedInUser}}</div>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t<li *ngIf=\\\"isLoggedIn\\\" class=\\\"nav-item\\\">\\n\\t\\t\\t\\t\\t<a routerLink=\\\"/settings\\\" class=\\\"nav-link\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">Settings</a>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t<li *ngIf=\\\"isLoggedIn\\\" class=\\\"nav-item\\\">\\n\\t\\t\\t\\t\\t<div (click)=\\\"onLogoutClick()\\\" class=\\\"nav-link btn btn-link\\\">Logout</div>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t</ul>\\n\\n\\t\\t</div>\\n\\n\\t</div>\\n</nav>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {FlashMessagesService} from 'angular2-flash-messages';\nimport {AuthService} from '../../services/auth.service';\nimport {SettingsService} from '../../services/settings.service';\n\n@Component({\n    selector: 'app-navbar',\n    templateUrl: './navbar.component.html',\n    styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n    isLoggedIn: boolean;\n    loggedInUser: string;\n    showRegister: boolean;\n\n    constructor(\n        private authService: AuthService,\n        private router: Router,\n        private flashMessages: FlashMessagesService,\n        private settingService: SettingsService\n    ) {\n    }\n\n    ngOnInit() {\n        this.authService.getAuth().subscribe(auth => {\n            if (auth) {\n                this.isLoggedIn = true;\n                this.loggedInUser = auth.email;\n            } else {\n                // this.loggedInUser = \"\";\n                this.isLoggedIn = false;\n            }\n        });\n\n        this.showRegister = this.settingService.getSettings().allowRegistration;\n    }\n\n    onLogoutClick() {\n        this.authService.logOut().then(value => {\n            this.flashMessages.show(\"Your are now logged out\", {\n                cssClass: 'alert-success'\n            });\n\n            this.router.navigate(['/login']);\n        });\n    }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  not-found works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n\\t<div class=\\\"col-md-6 mx-auto\\\">\\n\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t<div class=\\\"card-body\\\">\\n\\n\\t\\t\\t\\t<h1 class=\\\"text-center pb-4 pt-3\\\">\\n\\t\\t\\t\\t\\t<span class=\\\"text-primary\\\"><i class=\\\"fas fa-lock\\\"></i> Client Panel</span> Register\\n\\t\\t\\t\\t</h1>\\n\\n\\t\\t\\t\\t<form (submit)=\\\"onSubmit()\\\">\\n\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label for=\\\"email\\\">Email</label>\\n\\t\\t\\t\\t\\t\\t<input type=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" required>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label for=\\\"password\\\">Password</label>\\n\\t\\t\\t\\t\\t\\t<input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" required>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<input type=\\\"submit\\\" value=\\\"Register\\\" class=\\\"btn btn-primary btn-block\\\">\\n\\n\\t\\t\\t\\t</form>\\n\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\nimport {FlashMessagesService} from 'angular2-flash-messages';\n\n@Component({\n    selector: 'app-register',\n    templateUrl: './register.component.html',\n    styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n    email: string;\n    password: string;\n\n    constructor(\n        private authService: AuthService,\n        private router: Router,\n        private flashMessages: FlashMessagesService,\n    ) {\n    }\n\n    ngOnInit() {\n    }\n\n    onSubmit() {\n        this.authService.register(this.email, this.password).then(res => {\n            this.flashMessages.show(\"You are now registered and logged in\", {\n                cssClass: 'alert-success'\n            });\n            this.router.navigate(['/']);\n        }).catch(err => {\n            this.flashMessages.show(err.message, {\n                cssClass: 'alert-danger'\n            });\n        });\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n\\t<div class=\\\"col-md-6\\\">\\n\\t\\t<a routerLink=\\\"/\\\" class=\\\"btn btn-link\\\">\\n\\t\\t\\t<i class=\\\"fas fa-arrow-circle-left\\\"></i> Back to Dashboard\\n\\t\\t</a>\\n\\t</div>\\n\\t<div class=\\\"col-md-6\\\">\\n\\n\\t</div>\\n</div>\\n\\n<div class=\\\"card\\\">\\n\\t<div class=\\\"card-header\\\">Edit Settings</div>\\n\\t<div class=\\\"card-body\\\">\\n\\t\\t<form (submit)=\\\"onSubmit()\\\">\\n\\n\\t\\t\\t<div class=\\\"form-check\\\">\\n\\t\\t\\t\\t<input type=\\\"checkbox\\\" id=\\\"allowRegistration\\\" name=\\\"allowRegistration\\\" class=\\\"form-check-input\\\" [checked]=\\\"settings.allowRegistration\\\" (change)=\\\"settings.allowRegistration = !settings.allowRegistration\\\">\\n\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"allowRegistration\\\">Allow Registration</label>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=\\\"form-check\\\">\\n\\t\\t\\t\\t<input type=\\\"checkbox\\\" id=\\\"disableBalanceOnAdd\\\" name=\\\"disableBalanceOnAdd\\\" class=\\\"form-check-input\\\" [checked]=\\\"settings.disableBalanceOnAdd\\\" (change)=\\\"settings.disableBalanceOnAdd = !settings.disableBalanceOnAdd\\\">\\n\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"disableBalanceOnAdd\\\">Disable Balance On Add</label>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=\\\"form-check\\\">\\n\\t\\t\\t\\t<input type=\\\"checkbox\\\" id=\\\"disableBalanceOnEdit\\\" name=\\\"disableBalanceOnEdit\\\" class=\\\"form-check-input\\\" [checked]=\\\"settings.disableBalanceOnEdit\\\" (change)=\\\"settings.disableBalanceOnEdit = !settings.disableBalanceOnEdit\\\">\\n\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"disableBalanceOnEdit\\\">Disable Balance On Edit</label>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<input type=\\\"submit\\\" value=\\\"Submit\\\" class=\\\"btn btn-primary btn-block mt-3\\\">\\n\\t\\t</form>\\n\\t</div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {FlashMessagesService} from 'angular2-flash-messages';\nimport {SettingsService} from '../../services/settings.service';\nimport {Settings} from '../../models/Settings';\n\n@Component({\n    selector: 'app-settings',\n    templateUrl: './settings.component.html',\n    styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n\n    settings: Settings = this.settingsService.getSettings();\n\n    constructor(\n        private settingsService: SettingsService,\n        private router: Router,\n        private flashMessages: FlashMessagesService\n    ) {\n    }\n\n    ngOnInit() {\n\n    }\n\n    onSubmit() {\n        this.settingsService.changeSettings(this.settings);\n\n        this.flashMessages.show(\"Settings saved\", {\n            cssClass: 'alert-success'\n        });\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<a routerLink=\\\"/client/add\\\" class=\\\"btn btn-success btn-block\\\">\\n\\t<i class=\\\"fas fa-plus\\\"></i> New\\n</a>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Injectable} from '@angular/core';\r\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {AngularFireAuth} from 'angularfire2/auth';\r\nimport {Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private afAuth: AngularFireAuth\r\n    ) {\r\n    }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n        return this.afAuth.authState.pipe(\r\n            map(auth => {\r\n                if (!auth) {\r\n                    this.router.navigate(['/login']);\r\n                    return false;\r\n                } else {\r\n                    return true;\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {CanActivate, Router} from '@angular/router';\r\nimport {SettingsService} from '../services/settings.service';\r\n\r\n@Injectable()\r\nexport class RegisterGuard implements CanActivate {\r\n\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private settingService: SettingsService\r\n    ) {\r\n    }\r\n\r\n    canActivate(): boolean {\r\n        if (this.settingService.getSettings().allowRegistration) {\r\n            return true;\r\n        } else {\r\n            this.router.navigate(['login']);\r\n            return false;\r\n        }\r\n    }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nimport {AngularFireAuth} from 'angularfire2/auth';\nimport {map} from 'rxjs/operators';\nimport {auth} from 'firebase';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n\n    constructor(\n        private afAuth: AngularFireAuth,\n    ) {\n    }\n\n    login(email: string, password: string) {\n\n        return new Promise(((resolve, reject) => {\n            this.afAuth.auth.signInWithEmailAndPassword(email, password).then((userData) => {\n                resolve(userData);\n            }, err => reject(err));\n        }));\n\n    }\n\n    logOut() {\n\n        return this.afAuth.auth.signOut();\n\n    }\n\n    getAuth() {\n        return this.afAuth.authState.pipe(\n            map(authentification => authentification)\n        );\n    }\n\n    register(email: string, password: string) {\n\n        return new Promise(((resolve, reject) => {\n            this.afAuth.auth.createUserWithEmailAndPassword(email, password).then((userData) => {\n                resolve(userData);\n            }, err => reject(err));\n        }));\n\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument} from 'angularfire2/firestore';\n\nimport {Client} from '../models/Client';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ClientService {\n\n    clientsCollection: AngularFirestoreCollection<Client>;\n    clientDoc: AngularFirestoreDocument<Client>;\n\n    clients: Observable<Client[]>;\n    client: Observable<Client>;\n\n    constructor(private afs: AngularFirestore) {\n        this.clientsCollection = this.afs.collection('clients', ref => ref.orderBy('lastName', 'asc'));\n    }\n\n    getClients(): Observable<Client[]> {\n\n        this.clients = this.clientsCollection.snapshotChanges().pipe(map(changes => {\n            return changes.map(action => {\n                const data = action.payload.doc.data() as Client;\n                data.id = action.payload.doc.id;\n                return data;\n            });\n        }));\n\n        return this.clients;\n    }\n\n    newClient(client: Client) {\n        this.clientsCollection.add(client);\n    }\n\n    getClient(id: string): Observable<Client> {\n        this.clientDoc = this.afs.doc<Client>(`clients/${id}`);\n        this.client = this.clientDoc.snapshotChanges().pipe(map(action => {\n            if (action.payload.exists === false) {\n                return null;\n            } else {\n                const data = action.payload.data() as Client;\n                data.id = action.payload.id;\n                return data;\n            }\n        }));\n\n        return this.client;\n    }\n\n    updateClient(client: Client) {\n        this.clientDoc = this.afs.doc(`clients/${client.id}`);\n        this.clientDoc.update(client);\n    }\n\n    deleteClient(client: Client) {\n        this.clientDoc = this.afs.doc(`clients/${client.id}`);\n        this.clientDoc.delete();\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Settings} from '../models/Settings';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SettingsService {\n\n    settings: Settings = {\n        allowRegistration: false,\n        disableBalanceOnAdd: false,\n        disableBalanceOnEdit: false\n    };\n\n    constructor() {\n        const storedSettings = localStorage.getItem('settings');\n        if (storedSettings != null) {\n            this.settings = JSON.parse(storedSettings);\n        }\n    }\n\n    getSettings(): Settings {\n        return this.settings;\n    }\n\n    changeSettings(settings: Settings) {\n        this.settings = settings;\n\n        localStorage.setItem('settings', JSON.stringify(this.settings));\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    firebase: {\n        apiKey: 'AIzaSyDPeXgQ0_9y26pg7gDEol7Zel7PRfc1Y4k',\n        authDomain: 'clientpanelprod-cc080.firebaseapp.com',\n        databaseURL: 'https://clientpanelprod-cc080.firebaseio.com',\n        projectId: 'clientpanelprod-cc080',\n        storageBucket: 'clientpanelprod-cc080.appspot.com',\n        messagingSenderId: '791702246372'\n    }\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}